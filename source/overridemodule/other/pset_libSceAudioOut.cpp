//Generated By SceModuleGenerator
#include <deque>
#include "rtaudio_c.h"

#include "pset_libSceAudioOut.h"


#define SCE_AUDIO_OUT_PARAM_FORMAT_S16_MONO     0
#define SCE_AUDIO_OUT_PARAM_FORMAT_S16_STEREO   1
#define SCE_AUDIO_OUT_PARAM_FORMAT_S16_8CH      2
#define SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_MONO   3
#define SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_STEREO 4
#define SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_8CH    5

#define SCE_AUDIO_OUT_PARAM_FORMAT_S16_8CH_STD   6
#define SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_8CH_STD 7

#define SCE_AUDIO_OUT_PARAM_FORMAT_MASK  0x000000FF
#define SCE_AUDIO_OUT_PARAM_FORMAT_SHIFT 0


#define SCE_AUDIO_OUT_ERROR_NOT_OPENED -2144993279; // 0x80260001
#define SCE_AUDIO_OUT_ERROR_BUSY -2144993278; // 0x80260002
#define SCE_AUDIO_OUT_ERROR_INVALID_PORT -2144993277; // 0x80260003
#define SCE_AUDIO_OUT_ERROR_INVALID_POINTER -2144993276; // 0x80260004
#define SCE_AUDIO_OUT_ERROR_PORT_FULL -2144993275; // 0x80260005
#define SCE_AUDIO_OUT_ERROR_INVALID_SIZE -2144993274; // 0x80260006
#define SCE_AUDIO_OUT_ERROR_INVALID_FORMAT -2144993273; // 0x80260007
#define SCE_AUDIO_OUT_ERROR_INVALID_SAMPLE_FREQ -2144993272; // 0x80260008
#define SCE_AUDIO_OUT_ERROR_INVALID_VOLUME -2144993271; // 0x80260009
#define SCE_AUDIO_OUT_ERROR_INVALID_PORT_TYPE -2144993270; // 0x8026000A
#define SCE_AUDIO_OUT_ERROR_INVALID_CONF_TYPE -2144993268; // 0x8026000C
#define SCE_AUDIO_OUT_ERROR_OUT_OF_MEMORY -2144993267; // 0x8026000D
#define SCE_AUDIO_OUT_ERROR_ALREADY_INIT -2144993266; // 0x8026000E
#define SCE_AUDIO_OUT_ERROR_NOT_INIT -2144993265; // 0x8026000F
#define SCE_AUDIO_OUT_ERROR_MEMORY -2144993264; // 0x80260010
#define SCE_AUDIO_OUT_ERROR_SYSTEM_RESOURCE -2144993263; // 0x80260011

#define SCE_AUDIO_OUT_ERROR_TRANS_EVENT -2144993262; // 0x80260012
#define SCE_AUDIO_OUT_ERROR_INVALID_FLAG -2144993261; // 0x80260013
#define SCE_AUDIO_OUT_ERROR_INVALID_MIXLEVEL -2144993260; // 0x80260014
#define SCE_AUDIO_OUT_ERROR_INVALID_ARG -2144993259; // 0x80260015
#define SCE_AUDIO_OUT_ERROR_INVALID_PARAM -2144993258; // 0x80260016

template<typename T>
class CThreadSafeQueue
{
public:
	CThreadSafeQueue()
	{
		m_maxElem = std::numeric_limits<size_t>::max();
	}

	CThreadSafeQueue(size_t max)
	{
		m_maxElem = max;
	}

	void push(T const& value)
	{
		{
			std::unique_lock<std::mutex> lock(m_mutex);
			m_cvNotFull.wait(lock, [=] { return m_queue.size() < m_maxElem; });
			m_queue.push_front(value);
		}

		this->m_cvNotEmpty.notify_one();
	}

	T pop()
	{
		std::unique_lock<std::mutex> lock(m_mutex);
		m_cvNotEmpty.wait(lock, [=] { return !m_queue.empty(); });

		T rc(std::move(m_queue.back()));
		m_queue.pop_back();

		lock.unlock();
		m_cvNotFull.notify_one();

		return rc;
	}

private:
	size_t m_maxElem;
	std::mutex m_mutex;
	std::condition_variable m_cvNotEmpty;
	std::condition_variable m_cvNotFull;
	std::deque<T> m_queue;
};

struct SAudioProperties
{
	uint32_t m_nChannels;
	uint32_t m_bytesPerSample;
	uint32_t m_audioFormat;
};


struct SAudioOutContext
{
	struct
	{
		int32_t m_userId;
		int32_t m_type;
		int32_t m_index;
		uint32_t m_length;
		uint32_t m_freq;
		uint32_t m_param;
	} m_apiParams;

	struct
	{
		uint32_t m_numChannels;
		uint32_t m_bytesConsumesPerSample;
	} m_requestedArgs;

	struct
	{
		uint32_t m_numChannels;
		uint32_t m_bytesConsumesPerSample;
	} m_supportedArgs;

	rtaudio_t m_audioHandle;
	uint32_t m_bytesPerSample;

	std::mutex mutex;
	std::condition_variable condDone;
	CThreadSafeQueue<const void*> queue;

	bool m_doneFlag = false;
	bool m_streamOpenFlag = false;

	SAudioOutContext() :queue{ 1 }
	{
		m_audioHandle = rtaudio_create(RTAUDIO_API_UNSPECIFIED);
	}
	~SAudioOutContext()
	{
		rtaudio_destroy(m_audioHandle);
	}
};

static SAudioProperties getAudioProperties(uint32_t param)
{
	uint32_t format = param & 0x000000ff;
	SAudioProperties props = {};

	switch (format)
	{
	case SCE_AUDIO_OUT_PARAM_FORMAT_S16_MONO:
	{
		props.m_nChannels = 1;
		props.m_bytesPerSample = 2;
		props.m_audioFormat = RTAUDIO_FORMAT_SINT16;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_S16_STEREO:
	{
		props.m_nChannels = 2;
		props.m_bytesPerSample = 2;
		props.m_audioFormat = RTAUDIO_FORMAT_SINT16;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_S16_8CH:
	{
		props.m_nChannels = 8;
		props.m_bytesPerSample = 2;
		props.m_audioFormat = RTAUDIO_FORMAT_SINT16;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_S16_8CH_STD:
	{
		props.m_nChannels = 8;
		props.m_bytesPerSample = 2;
		props.m_audioFormat = RTAUDIO_FORMAT_SINT16;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_MONO:
	{
		props.m_nChannels = 1;
		props.m_bytesPerSample = 4;
		props.m_audioFormat = RTAUDIO_FORMAT_FLOAT32;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_STEREO:
	{
		props.m_nChannels = 2;
		props.m_bytesPerSample = 4;
		props.m_audioFormat = RTAUDIO_FORMAT_FLOAT32;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_8CH:
	{
		props.m_nChannels = 8;
		props.m_bytesPerSample = 4;
		props.m_audioFormat = RTAUDIO_FORMAT_FLOAT32;
		break;
	}

	case SCE_AUDIO_OUT_PARAM_FORMAT_FLOAT_8CH_STD:
	{
		props.m_nChannels = 8;
		props.m_bytesPerSample = 4;
		props.m_audioFormat = RTAUDIO_FORMAT_FLOAT32;
		break;
	}
	}

	return props;
}

static int outputCallBack(void* outputBuffer,
	void* in,
	unsigned int nFrames,
	double stream_time,
	rtaudio_stream_status_t status,
	void* userdata)
{
	int rc = 0;
	auto ctx = reinterpret_cast<SAudioOutContext*>(userdata);
	auto buffer = reinterpret_cast<const uint8_t*>(ctx->queue.pop());
	{
		std::unique_lock<std::mutex> lock{ ctx->mutex };
		if (buffer == nullptr)
		{
			rc = 1;
		}
		else
		{
			std::copy(buffer,
				buffer + ctx->m_requestedArgs.m_bytesConsumesPerSample,
				reinterpret_cast<uint8_t*>(outputBuffer));
			rc = 0;
		}

		ctx->m_doneFlag = true;
	}

	ctx->condDone.notify_one();

	return rc;
}

int CAudioOut::Init(int32_t userID, int32_t type, int32_t index, int32_t length, uint32_t freq, uint32_t param)
{
	m_audioOutContext = std::make_unique<SAudioOutContext>();
	m_audioOutContext->m_apiParams.m_userId = userID;
	m_audioOutContext->m_apiParams.m_type = type;
	m_audioOutContext->m_apiParams.m_index = index;
	m_audioOutContext->m_apiParams.m_length = length;
	m_audioOutContext->m_apiParams.m_freq = freq;
	m_audioOutContext->m_apiParams.m_param = param;

	auto audioProps = getAudioProperties(param);
	m_audioOutContext->m_bytesPerSample = audioProps.m_bytesPerSample;
	m_audioOutContext->m_requestedArgs.m_numChannels = audioProps.m_nChannels;
	m_audioOutContext->m_requestedArgs.m_bytesConsumesPerSample =
		m_audioOutContext->m_requestedArgs.m_numChannels
		* audioProps.m_bytesPerSample
		* m_audioOutContext->m_apiParams.m_length;

	auto devId = rtaudio_get_default_output_device(m_audioOutContext->m_audioHandle);
	auto devInfo = rtaudio_get_device_info(m_audioOutContext->m_audioHandle, devId);

	// supported parameters
	m_audioOutContext->m_supportedArgs.m_numChannels = devInfo.output_channels;

	m_audioOutContext->m_supportedArgs.m_bytesConsumesPerSample =
		m_audioOutContext->m_supportedArgs.m_numChannels
		* audioProps.m_bytesPerSample
		* m_audioOutContext->m_apiParams.m_length;

	// open audio stream
	rtaudio_stream_parameters_t streamParam;
	streamParam.device_id = devId;
	streamParam.first_channel = 0;
	streamParam.num_channels = m_audioOutContext->m_requestedArgs.m_numChannels;

	unsigned int bufferFrameSize = static_cast<unsigned int>(m_audioOutContext->m_apiParams.m_length);
	int ret =
		rtaudio_open_stream(m_audioOutContext->m_audioHandle,
			&streamParam,
			nullptr,
			audioProps.m_audioFormat,
			m_audioOutContext->m_apiParams.m_freq,
			&bufferFrameSize,
			outputCallBack,
			m_audioOutContext.get(),
			nullptr,
			nullptr);

	return ret;
}

int32_t CAudioOut::AudioOutput(const void* ptr)
{
	if (m_audioOutContext->m_streamOpenFlag == false)
	{
		rtaudio_start_stream(m_audioOutContext->m_audioHandle);
		if (rtaudio_error(m_audioOutContext->m_audioHandle) != nullptr)
		{
			return -1;
		}
		m_audioOutContext->m_streamOpenFlag = true;
	}

	if (ptr == nullptr)
	{
		std::unique_lock<std::mutex> lock{ m_audioOutContext->mutex };
		m_audioOutContext->condDone.wait(lock, [=] { return m_audioOutContext->m_doneFlag; });
		return 0;
	}

	auto dataPtr = reinterpret_cast<const uint8_t*>(ptr);

	{
		std::unique_lock<std::mutex> lock{ m_audioOutContext->mutex };
		m_audioOutContext->m_doneFlag = false;
		m_audioOutContext->queue.push(dataPtr);
		m_audioOutContext->condDone.wait(lock, [=] { return m_audioOutContext->m_doneFlag; });
	}
	return 0;
}

static CAudioOut gAudioOut[20];
static uint32_t gAudioOutNum = 0;

int PSET_SYSV_ABI Pset_sceAudioOutOpen(int32_t userID, int32_t type, int32_t index, int32_t length, uint32_t freq, uint32_t param)
{
	PSET_LOG_IMPLEMENTED("implemented function: Pset_sceAudioOutOpen");
	uint32_t audioIndex = gAudioOutNum;
	gAudioOutNum++;

	int err = gAudioOut[audioIndex].Init(userID, type, index, length, freq, param);
	if (err != 0)
	{
		return SCE_AUDIO_OUT_ERROR_TRANS_EVENT;
	}

	return audioIndex;
}

int PSET_SYSV_ABI Pset_sceAudioOutOutput(int32_t handle, const void* ptr)
{
	//PSET_LOG_IMPLEMENTED("implemented function: Pset_sceAudioOutOutput");
	assert(handle < gAudioOutNum);
	int err = gAudioOut[handle].AudioOutput(ptr);
	if (err != 0)
	{
		return SCE_AUDIO_OUT_ERROR_TRANS_EVENT;
	}
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutOutputs(SSceAudioOutOutputParam* params, uint64_t count)
{
	//PSET_LOG_IMPLEMENTED("implemented function: Pset_sceAudioOutOutputs");
	//if (params == nullptr) return SCE_AUDIO_OUT_ERROR_INVALID_POINTER;
	//if (count == 0) return SCE_AUDIO_OUT_ERROR_INVALID_PARAM;
	//for (uint32_t index = 0; index < count; index++)
	//{
	//	int err = Pset_sceAudioOutOutput(params[index].handle, params[index].ptr);
	//	if (err != 0)
	//	{
	//		return SCE_AUDIO_OUT_ERROR_TRANS_EVENT;
	//	}
	//}
	return PSET_OK;
}




int PSET_SYSV_ABI Pset_sceAudioOutDeviceIdOpen(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutDeviceIdOpen");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioDeviceControlGet(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioDeviceControlGet");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioDeviceControlSet(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioDeviceControlSet");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutA3dControl(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutA3dControl");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutA3dExit(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutA3dExit");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutA3dInit(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutA3dInit");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutAttachToApplicationByPid(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutAttachToApplicationByPid");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutChangeAppModuleState(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutChangeAppModuleState");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutClose(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutClose");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutDetachFromApplicationByPid(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutDetachFromApplicationByPid");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExConfigureOutputMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExConfigureOutputMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExGetSystemInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExGetSystemInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExPtClose(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExPtClose");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExPtGetLastOutputTime(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExPtGetLastOutputTime");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExPtOpen(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExPtOpen");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutExSystemInfoIsSupportedAudioOutExMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutExSystemInfoIsSupportedAudioOutExMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetFocusEnablePid(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetFocusEnablePid");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetHandleStatusInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetHandleStatusInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetInfoOpenNum(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetInfoOpenNum");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetLastOutputTime(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetLastOutputTime");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetPortState(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetPortState");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetSimulatedBusUsableStatusByBusType(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetSimulatedBusUsableStatusByBusType");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetSimulatedHandleStatusInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetSimulatedHandleStatusInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetSimulatedHandleStatusInfo2(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetSimulatedHandleStatusInfo2");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetSparkVss(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetSparkVss");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutGetSystemState(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutGetSystemState");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutInit(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutInit");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutInitIpmiGetSession(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutInitIpmiGetSession");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutMasteringGetState(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutMasteringGetState");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutMasteringInit(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutMasteringInit");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutMasteringSetParam(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutMasteringSetParam");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutMasteringTerm(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutMasteringTerm");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutMbusInit(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutMbusInit");
	return PSET_OK;
}


int PSET_SYSV_ABI Pset_sceAudioOutOpenEx(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutOpenEx");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutPtClose(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutPtClose");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutPtGetLastOutputTime(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutPtGetLastOutputTime");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutPtOpen(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutPtOpen");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetConnections(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetConnections");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetConnectionsForUser(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetConnectionsForUser");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetDevConnection(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetDevConnection");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetHeadphoneOutMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetHeadphoneOutMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetJediJackVolume(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetJediJackVolume");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetJediSpkVolume(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetJediSpkVolume");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetMainOutput(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetMainOutput");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetMixLevelPadSpk(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetMixLevelPadSpk");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetMorpheusParam(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetMorpheusParam");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetMorpheusWorkingMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetMorpheusWorkingMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetPortConnections(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetPortConnections");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetPortStatuses(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetPortStatuses");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetRecMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetRecMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetSparkParam(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetSparkParam");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetUsbVolume(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetUsbVolume");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetVolume(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetVolume");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetVolumeDown(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetVolumeDown");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutStartAuxBroadcast(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutStartAuxBroadcast");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutStartSharePlay(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutStartSharePlay");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutStopAuxBroadcast(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutStopAuxBroadcast");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutStopSharePlay(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutStopSharePlay");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSuspendResume(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSuspendResume");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSysConfigureOutputMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSysConfigureOutputMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSysGetHdmiMonitorInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSysGetHdmiMonitorInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSysGetSystemInfo(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSysGetSystemInfo");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSysHdmiMonitorInfoIsSupportedAudioOutMode(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSysHdmiMonitorInfoIsSupportedAudioOutMode");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSystemControlGet(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSystemControlGet");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSystemControlSet(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSystemControlSet");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSparkControlSetEqCoef(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSparkControlSetEqCoef");
	return PSET_OK;
}

int PSET_SYSV_ABI Pset_sceAudioOutSetSystemDebugState(void)
{
	PSET_LOG_UNIMPLEMENTED("unimplemented function: Pset_sceAudioOutSetSystemDebugState");
	return PSET_OK;
}

static const SPSET_LIB_EXPORT_SYSMBOL gSymTable_libSceAudioOutDeviceService_libSceAudioOut[] =
{
 { 0x731D9D6056F32008,"Pset_sceAudioOutDeviceIdOpen", (void*)Pset_sceAudioOutDeviceIdOpen },
 SPSET_LIB_EXPORT_FUNTCTION_END
};

static const SPSET_LIB_EXPORT_SYSMBOL gSymTable_libSceAudioDeviceControl_libSceAudioOut[] =
{
 { 0xB4ABA68D04B3872B,"Pset_sceAudioDeviceControlGet", (void*)Pset_sceAudioDeviceControlGet },
 { 0xE4285F70739FDD23,"Pset_sceAudioDeviceControlSet", (void*)Pset_sceAudioDeviceControlSet },
 SPSET_LIB_EXPORT_FUNTCTION_END
};

static const SPSET_LIB_EXPORT_SYSMBOL gSymTable_libSceAudioOut_libSceAudioOut[] =
{
 { 0x233F57EC84A5761B,"Pset_sceAudioOutA3dControl", (void*)Pset_sceAudioOutA3dControl },
 { 0xF51548A2870E540A,"Pset_sceAudioOutA3dExit", (void*)Pset_sceAudioOutA3dExit },
 { 0x9FB2A0C44F2B3AE1,"Pset_sceAudioOutA3dInit", (void*)Pset_sceAudioOutA3dInit },
 { 0x58100EEBF9F4FF83,"Pset_sceAudioOutAttachToApplicationByPid", (void*)Pset_sceAudioOutAttachToApplicationByPid },
 { 0x3B714CD965C825A2,"Pset_sceAudioOutChangeAppModuleState", (void*)Pset_sceAudioOutChangeAppModuleState },
 { 0xB35FFFB84F66045C,"Pset_sceAudioOutClose", (void*)Pset_sceAudioOutClose },
 { 0xA25E0B6DE4C6F267,"Pset_sceAudioOutDetachFromApplicationByPid", (void*)Pset_sceAudioOutDetachFromApplicationByPid },
 { 0xAF557D205104F93B,"Pset_sceAudioOutExConfigureOutputMode", (void*)Pset_sceAudioOutExConfigureOutputMode },
 { 0xC196A4450B161A8B,"Pset_sceAudioOutExGetSystemInfo", (void*)Pset_sceAudioOutExGetSystemInfo },
 { 0xC638E14F9BB0D3CA,"Pset_sceAudioOutExPtClose", (void*)Pset_sceAudioOutExPtClose },
 { 0x0EC493ED336CC9FA,"Pset_sceAudioOutExPtGetLastOutputTime", (void*)Pset_sceAudioOutExPtGetLastOutputTime },
 { 0xE14956DC24AE09AE,"Pset_sceAudioOutExPtOpen", (void*)Pset_sceAudioOutExPtOpen },
 { 0x5DC8FC553B67670D,"Pset_sceAudioOutExSystemInfoIsSupportedAudioOutExMode", (void*)Pset_sceAudioOutExSystemInfoIsSupportedAudioOutExMode },
 { 0x237170726920E4FA,"Pset_sceAudioOutGetFocusEnablePid", (void*)Pset_sceAudioOutGetFocusEnablePid },
 { 0x6379577C21445856,"Pset_sceAudioOutGetHandleStatusInfo", (void*)Pset_sceAudioOutGetHandleStatusInfo },
 { 0xFF4D0E02EB40C3E7,"Pset_sceAudioOutGetInfo", (void*)Pset_sceAudioOutGetInfo },
 { 0x46A98AC41A81F01E,"Pset_sceAudioOutGetInfoOpenNum", (void*)Pset_sceAudioOutGetInfoOpenNum },
 { 0x3ED96DB37DBAA5DB,"Pset_sceAudioOutGetLastOutputTime", (void*)Pset_sceAudioOutGetLastOutputTime },
 { 0x1AB43DB3822B35A4,"Pset_sceAudioOutGetPortState", (void*)Pset_sceAudioOutGetPortState },
 { 0x73B995A33C4990F5,"Pset_sceAudioOutGetSimulatedBusUsableStatusByBusType", (void*)Pset_sceAudioOutGetSimulatedBusUsableStatusByBusType },
 { 0xA56992ECB6A3625A,"Pset_sceAudioOutGetSimulatedHandleStatusInfo", (void*)Pset_sceAudioOutGetSimulatedHandleStatusInfo },
 { 0xA0F2E086101680C3,"Pset_sceAudioOutGetSimulatedHandleStatusInfo2", (void*)Pset_sceAudioOutGetSimulatedHandleStatusInfo2 },
 { 0xE7EAFB2581E99178,"Pset_sceAudioOutGetSparkVss", (void*)Pset_sceAudioOutGetSparkVss },
 { 0x47985E9A828A203F,"Pset_sceAudioOutGetSystemState", (void*)Pset_sceAudioOutGetSystemState },
 { 0x25F10F5D5C6116A0,"Pset_sceAudioOutInit", (void*)Pset_sceAudioOutInit },
 { 0x9F5E8A768C67BE5D,"Pset_sceAudioOutInitIpmiGetSession", (void*)Pset_sceAudioOutInitIpmiGetSession },
 { 0xAFEA8AC3EB9E0FE4,"Pset_sceAudioOutMasteringGetState", (void*)Pset_sceAudioOutMasteringGetState },
 { 0xC57E112DE81AADB8,"Pset_sceAudioOutMasteringInit", (void*)Pset_sceAudioOutMasteringInit },
 { 0xE34E79C9A520DC46,"Pset_sceAudioOutMasteringSetParam", (void*)Pset_sceAudioOutMasteringSetParam },
 { 0x4555AD520A227F9A,"Pset_sceAudioOutMasteringTerm", (void*)Pset_sceAudioOutMasteringTerm },
 { 0xFCB5E1706011C379,"Pset_sceAudioOutMbusInit", (void*)Pset_sceAudioOutMbusInit },
 { 0x7A436FB13DB6AEC6,"Pset_sceAudioOutOpen", (void*)Pset_sceAudioOutOpen },
 { 0xA8BA522BBE655C8E,"Pset_sceAudioOutOpenEx", (void*)Pset_sceAudioOutOpenEx },
 { 0x40E42D6DE0EAB13E,"Pset_sceAudioOutOutput", (void*)Pset_sceAudioOutOutput },
 { 0xC373DD6924D2C061,"Pset_sceAudioOutOutputs", (void*)Pset_sceAudioOutOutputs },
 { 0x31AA474E07A881B9,"Pset_sceAudioOutPtClose", (void*)Pset_sceAudioOutPtClose },
 { 0x6196AAF9429BAE24,"Pset_sceAudioOutPtGetLastOutputTime", (void*)Pset_sceAudioOutPtGetLastOutputTime },
 { 0xC724FC21408BDC22,"Pset_sceAudioOutPtOpen", (void*)Pset_sceAudioOutPtOpen },
 { 0xA3838B410AAA03DD,"Pset_sceAudioOutSetConnections", (void*)Pset_sceAudioOutSetConnections },
 { 0x407AB6CA514E6749,"Pset_sceAudioOutSetConnectionsForUser", (void*)Pset_sceAudioOutSetConnectionsForUser },
 { 0xAFD286A86A704E98,"Pset_sceAudioOutSetDevConnection", (void*)Pset_sceAudioOutSetDevConnection },
 { 0xD3C30A8B613F45C1,"Pset_sceAudioOutSetHeadphoneOutMode", (void*)Pset_sceAudioOutSetHeadphoneOutMode },
 { 0xD7C2151AB2100D4E,"Pset_sceAudioOutSetJediJackVolume", (void*)Pset_sceAudioOutSetJediJackVolume },
 { 0x874A3E0F8618AF59,"Pset_sceAudioOutSetJediSpkVolume", (void*)Pset_sceAudioOutSetJediSpkVolume },
 { 0x288F5C976DADA3B1,"Pset_sceAudioOutSetMainOutput", (void*)Pset_sceAudioOutSetMainOutput },
 { 0xC15C0F539D294B57,"Pset_sceAudioOutSetMixLevelPadSpk", (void*)Pset_sceAudioOutSetMixLevelPadSpk },
 { 0x79E46C6DE1987B6D,"Pset_sceAudioOutSetMorpheusParam", (void*)Pset_sceAudioOutSetMorpheusParam },
 { 0x219AC8B4F9DF9413,"Pset_sceAudioOutSetMorpheusWorkingMode", (void*)Pset_sceAudioOutSetMorpheusWorkingMode },
 { 0x1B2D1178E8175B4D,"Pset_sceAudioOutSetPortConnections", (void*)Pset_sceAudioOutSetPortConnections },
 { 0xA110457E522B0A0D,"Pset_sceAudioOutSetPortStatuses", (void*)Pset_sceAudioOutSetPortStatuses },
 { 0x69EFC854F3125A35,"Pset_sceAudioOutSetRecMode", (void*)Pset_sceAudioOutSetRecMode },
 { 0x77758BDAE3C4D5E1,"Pset_sceAudioOutSetSparkParam", (void*)Pset_sceAudioOutSetSparkParam },
 { 0x5FB09FB22BA39BC6,"Pset_sceAudioOutSetUsbVolume", (void*)Pset_sceAudioOutSetUsbVolume },
 { 0x6FEB8057CF489711,"Pset_sceAudioOutSetVolume", (void*)Pset_sceAudioOutSetVolume },
 { 0xAE1A3D0C7FF47A1B,"Pset_sceAudioOutSetVolumeDown", (void*)Pset_sceAudioOutSetVolumeDown },
 { 0x23DD4FD0700FA63C,"Pset_sceAudioOutStartAuxBroadcast", (void*)Pset_sceAudioOutStartAuxBroadcast },
 { 0xBA8F9EA0FCDD43FB,"Pset_sceAudioOutStartSharePlay", (void*)Pset_sceAudioOutStartSharePlay },
 { 0x0089A269816B29D7,"Pset_sceAudioOutStopAuxBroadcast", (void*)Pset_sceAudioOutStopAuxBroadcast },
 { 0xB5E0B228A64F8CC1,"Pset_sceAudioOutStopSharePlay", (void*)Pset_sceAudioOutStopSharePlay },
 { 0xF796DDB4774D5227,"Pset_sceAudioOutSuspendResume", (void*)Pset_sceAudioOutSuspendResume },
 { 0xA112599D7C6893F3,"Pset_sceAudioOutSysConfigureOutputMode", (void*)Pset_sceAudioOutSysConfigureOutputMode },
 { 0x4DFF7FC8E27017F0,"Pset_sceAudioOutSysGetHdmiMonitorInfo", (void*)Pset_sceAudioOutSysGetHdmiMonitorInfo },
 { 0xCB6FE13FF2A84CC2,"Pset_sceAudioOutSysGetSystemInfo", (void*)Pset_sceAudioOutSysGetSystemInfo },
 { 0x615F9B9CCBCC7D88,"Pset_sceAudioOutSysHdmiMonitorInfoIsSupportedAudioOutMode", (void*)Pset_sceAudioOutSysHdmiMonitorInfoIsSupportedAudioOutMode },
 { 0x2441E100D44470BB,"Pset_sceAudioOutSystemControlGet", (void*)Pset_sceAudioOutSystemControlGet },
 { 0xF421D656FEABDC38,"Pset_sceAudioOutSystemControlSet", (void*)Pset_sceAudioOutSystemControlSet },
 SPSET_LIB_EXPORT_FUNTCTION_END
};

static const SPSET_LIB_EXPORT_SYSMBOL gSymTable_libSceAudioOutSparkControl_libSceAudioOut[] =
{
 { 0x32DEC907794EC899,"Pset_sceAudioOutSparkControlSetEqCoef", (void*)Pset_sceAudioOutSparkControlSetEqCoef },
 SPSET_LIB_EXPORT_FUNTCTION_END
};

static const SPSET_LIB_EXPORT_SYSMBOL gSymTable_libSceDbgAudioOut_libSceAudioOut[] =
{
 { 0xED4B1D0CE12F8E59,"Pset_sceAudioOutSetSystemDebugState", (void*)Pset_sceAudioOutSetSystemDebugState },
 SPSET_LIB_EXPORT_FUNTCTION_END
};

static const SPSET_EXPORT_LIB gLibTable_libSceAudioOut[] =
{
 {"libSceAudioOutDeviceService", gSymTable_libSceAudioOutDeviceService_libSceAudioOut },
 {"libSceAudioDeviceControl", gSymTable_libSceAudioDeviceControl_libSceAudioOut },
 {"libSceAudioOut", gSymTable_libSceAudioOut_libSceAudioOut },
 {"libSceAudioOutSparkControl", gSymTable_libSceAudioOutSparkControl_libSceAudioOut },
 {"libSceDbgAudioOut", gSymTable_libSceDbgAudioOut_libSceAudioOut },
 SPSET_EXPORT_LIB_END
};

static const SPSET_EXPORT_MODULE gExportModule_libSceAudioOut("libSceAudioOut", gLibTable_libSceAudioOut);


